{# templates/menu.html.twig #}
<!DOCTYPE html>
<html lang="fr">
	<head>
		<meta charset="UTF-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>Menu du Restaurant</title>
		<style>
			/* Style général */
			* {
				padding: 0;

			}
			body {
				margin: 0;
				padding: 0;
				background-color: #f8f9fa;
				font-family: 'Roboto', sans-serif;

			}

			/* Conteneur principal */
			.container {
				display: flex;
				width: 100%;
				height: 100%;
			}

			/* Section gauche (carrousel) */
			.left-section {
				width: 25%;
				background-image: url('{{ asset('images/Lcjgs.gif') }}');
				background-size: cover;
				background-repeat: no-repeat;
				background-position: 50% 0;
				position: relative;
				display: flex;
				align-items: center;
				justify-content: center;
				overflow: hidden;
				box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
			}

			.carousel {
				display: flex;
				animation: slide-left 10s infinite;
			}

			/* Animation pour le carrousel de droite à gauche avec fondu */
			@keyframes slide-left {
				0% {
					transform: translateX(0);
					opacity: 1;
				}
				33% {
					transform: translateX(-100%);
					opacity: 0.5;
				}
				66% {
					transform: translateX(-200%);
					opacity: 1;
				}
				100% {
					transform: translateX(0);
					opacity: 1;
				}
			}


			/* Section droite (grille d'images) */
			.right-section {
				width: 75%;
				background-color: #fff;
				margin-top: -40px;
				display: flex;
				flex-wrap: wrap;
				justify-content: space-around;
				align-content: flex-start;
				overflow-y: auto;
			}

			/* Style des items avec description et prix */
			.menu-item {
				margin-top: 8%;
				display: flex;
				flex-direction: column;
				align-items: center;
				justify-content: flex-start;
				width: 30%;
				margin-bottom: 20px;
				text-align: center;
				font-family: 'Roboto', sans-serif;
				box-sizing: border-box;
				position: relative;
			}

			.menu-item .mm {
				width: 100%;
				height: 250px;
object-fit: contain;
				border-radius: 10px;
				margin-bottom: 10px;
				transition: transform 0.3s ease, box-shadow 0.3s ease;
			}


			.menu-item .description {
				font-size: 16px;
				color: #333;
				margin: 5px 0;
			}

			.menu-item .price {
				font-size: 18px;
				color: #e74c3c;
				font-weight: bold;
			}

			/* Style de la zone publicitaire */
			.ad-section {
				width: 100%;
				margin-top: 20px;
				padding: 10px;
				background-color: #ff7f00;
				color: white;
				text-align: center;
				font-size: 20px;
				font-weight: bold;
				border-radius: 10px;
			}

			/* Style responsive */
			@media screen and(max-width: 1024px) {
				.container {
					flex-direction: column;
				}

				.left-section,
				.right-section {
					width: 100%;
				}

				.menu-item img {
					width: 45%;
					height: 120px;
				}
			}
			/* Styling for carousel items */
			.carousel-item {
				position: relative;
				text-align: center;
				color: white;
				width: 100%;
			}

			.carousel-item img {
				width: 100%;
				height: auto;
				object-fit: contain;
			}

			/* Description and Price styling */
			.carousel-description {
				position: absolute;
				bottom: 10px;
				left: 0;
				right: 0;
				background: rgba(0, 0, 0, 0.6); /* Semi-transparent background */
				padding: 10px;
				display: flex;
				justify-content: space-between;
				align-items: center;
				font-size: 16px;
				color: #fff;
				border-radius: 0 0 10px 10px;
			}

			.item-name {
				font-weight: bold;
			}

			.item-price {
				font-size: 18px;
				color: #e74c3c;
				font-weight: bold;
			}
			.description p {
				background: #fae9d7;
				font-weight: bold;
				rotate: -5deg;
				font-size: 30px;
				border-radius: 7px;

				font-family: "Comic Sans MS", cursive, sans-serif;

			}
			.descriptions p {
				font-size: 20px;
				margin-right: 20px;
				margin-top: -5px;
				font-family: "Comic Sans MS", cursive, sans-serif;

				/* Limite à 3 lignes */
				display: -webkit-box;
				-webkit-line-clamp: 3;
				-webkit-box-orient: vertical;
				overflow: hidden;
				height: 90px;
			}

			.price p {
				position: absolute;
				width: 100%;
				padding: 2px;
				border-radius: 5px;
				margin-top: -5px;
				margin-left: -25%;
				font-family: "Comic Sans MS", cursive, sans-serif;
			}
			.textrb p {
				font-family: "Brush Script MT", cursive;
				font-family: "Blippo", fantasy;
				font-family: "Great Vibes", cursive;
				font-family: "Comic Sans MS", cursive, sans-serif;
			}
			div .textrb {
				width: 70%;
			}
			h1 {
				rotate: -5deg;
				font-family: "Blippo", fantasy;
				font-family: "Chalkduster", fantasy;
				font-family: "Chalkduster", fantasy;
				font-family: "Luminari", "Comic Sans MS", cursive, sans-serif;
				font-family: "Great Vibes", cursive;
				font-family: "Comic Sans MS", cursive, sans-serif;
			}
			h1 {

				font-size: 50px;
				color: white;
				letter-spacing: 5px;
				text-transform: uppercase;
				font-weight: bold;
				padding: 20px;
				margin: 10px 10% 10%;
				/* Remplacez l'URL par une vraie image d'effet pinceau */
				text-shadow: 3px 3px 8px rgba(0, 0, 0, 0.3); /* Ajoute un léger ombrage au texte */
				text-align: center;
				animation: attentionAnimation 4s infinite ease-in-out;
				position: relative;
				top: 40px;
			}
			/* Animation principale */
			@keyframes attentionAnimation {
				0% {
					transform: scale(0.8) translateY(0); /* Démarre avec une légère réduction */
					opacity: 0;
				}
				10% {
					transform: scale(1.2) translateY(-10px); /* Zoom rapide avec un léger rebond */
					opacity: 1;
				}
				30% {
					transform: scale(1) translateY(0); /* Retour à la taille normale */
				}
				60% {
					text-shadow: 0 0 15px rgba(255, 105, 0, 0.8), 0 0 30px rgba(255, 150, 0, 0.5); /* Éclat lumineux */
				}
				100% {
					transform: scale(1) translateY(0);
					opacity: 1;
					text-shadow: none;
				}
			}

			/* Effet de surbrillance pour un éclat subtil */
			h1::before {
				content: '';
				position: fixed;
				top: 50%;
				left: -500%;
				width: 100%;
				height: 200%;
				background: linear-gradient(120deg, transparent 0%, rgba(255, 255, 255, 0.5) 50%, transparent 100%);
				animation: shine 3s infinite ease-in-out;
				transform: skewX(-10deg);
			}

			/* Animation de surbrillance */
			@keyframes shine {
				0% {
					left: 2%;
				}
				20% {
					left: 2%;
				}
				30% {
					left: 2%;
				}
			}
			.carousel-container {
				width: 100%;
				height: 400px; /* Ajuste selon tes besoins */
				position: relative;
			}

			.carousel-track {
				display: flex;
				transition: transform 1.5s cubic-bezier(0.25, 0.46, 0.45, 0.94); /* Transition dynamique */
				will-change: transform;

			}

			.carousel-slide {
				min-width: 100%;
				transition: opacity 1s ease-in-out; /* Douce transition d'opacité */
				height: 100%;
			}

			.carousel-slide img {
				width: 100%;
				height: 340px;
				border-radius: 10px;
				margin-bottom: 10px;
				transition: transform 0.3s ease, box-shadow 0.3s ease;
			}
			h2 {
				margin-top: 1%;
				font-size: 40px;
				text-align: center;
				color: #ea551d;
				text-transform: uppercase;
			}
			.info-container {
				position: relative;
				text-align: center;
				color: #f8f9fa;
			}
			.info-container .prix {

				position: absolute;
				top: -700%;
				left: 30%;
				font-family: Poppins;
				border-bottom: #e74c3c solid 3px;
				color: #f8f9fa;
				font-size: 50px;
			}
			.menu-slider {
				margin: 0 auto 50px;
				overflow: hidden;
				position: relative;
			}

			.menu-items {
				display: flex;
				transition: transform 0.5s ease;
			}

			.menu-item {
				min-width: 33.33%; /* Afficher 3 éléments à la fois */
				padding-bottom: 90px;
				text-align: center;
			}
			.menu-sliders {
				margin: -22% auto 0;
				overflow: hidden;
				position: relative;
			}

			.menu-x {
				display: flex;
				transition: transform 0.5s ease;
			}

			.menu-ite {
				min-width: 33.33%; /* Afficher 3 éléments à la fois */
				text-align: center;
			}
			.menu-ite {
				margin-top: 13%;
				display: flex;
				flex-direction: column;
				align-items: center;
				justify-content: flex-start;
				width: 30%;
				text-align: center;
				font-family: 'Roboto', sans-serif;
				box-sizing: border-box;
				position: relative;
			}

			.menu-ite .mm {
				width: 100%;
				height: 200px;
object-fit: contain;
				border-radius: 10px;
				transition: transform 0.3s ease, box-shadow 0.3s ease;
			}


			.menu-ite .description {
				font-size: 16px;
				color: #333;
				margin: 5px 0;
			}

			.menu-ite .price {
				font-size: 18px;
				color: #e74c3c;
				font-weight: bold;
			}
			.piece p {
				background: #fae9d7;
				font-weight: bold;
				font-size: 25px;
				border-radius: 7px;

				font-family: "Comic Sans MS", cursive, sans-serif;
				position: absolute;
				top: 35%;
				left: 35%;


			}
			.sparkle-effect {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				pointer-events: none; /* Ne pas interférer avec les interactions utilisateur */
			}
			.description p {
				margin-top: 10px;
				position: relative;
			}
			.sparkle {
				position: absolute;
				background: radial-gradient(circle, rgba(255,200,0,1) 0%, rgba(255,100,0,0.8) 70%, rgba(255,0,0,0.1) 100%);
				width: 10px;
				height: 10px;
				border-radius: 50%;
				opacity: 0;
				animation: sparkle-animation 2s infinite ease-in-out;
			}

			@keyframes sparkle-animation {
				0% {
					opacity: 0;
					transform: scale(0);
				}
				50% {
					opacity: 1;
					transform: scale(1.8);
				}
				100% {
					opacity: 0;
					transform: scale(0);
				}
			}

			/* Générer plusieurs étincelles aléatoires */
			.sparkle:nth-child(1) {
				top: 10%;
				left: 20%;
				animation-delay: 0s;
			}
			.sparkle:nth-child(2) {
				top: 40%;
				left: 30%;
				animation-delay: 0.3s;
			}
			.sparkle:nth-child(3) {
				top: 70%;
				left: 50%;
				animation-delay: 0.5s;
			}
			.sparkle:nth-child(4) {
				top: 15%;
				left: 60%;
				animation-delay: 0.7s;
			}
			.sparkle:nth-child(5) {
				top: 80%;
				left: 40%;
				animation-delay: 1s;
			}
			.sparkle:nth-child(6) {
				top: 30%;
				left: 70%;
				animation-delay: 1.3s;
			}
			.sparkle:nth-child(7) {
				top: 50%;
				left: 90%;
				animation-delay: 1.5s;
			}
			.sparkle:nth-child(8) {
				top: 65%;
				left: 80%;
				animation-delay: 1.7s;
			}
			.sparkle:nth-child(9) {
				top: 20%;
				left: 90%;
				animation-delay: 1.9s;
			}
			.sparkle:nth-child(10) {
				top: 50%;
				left: 10%;
				animation-delay: 2.1s;
			}
			/* Style de la zone publicitaire */
			/* Définir les dimensions du slider */
			.menu-slider {
				overflow: hidden; /* Masquer les éléments qui débordent */
				width: 100%; /* Vous pouvez ajuster ceci pour correspondre à votre conteneur */
			}

			.menu-items {
				display: flex; /* Utiliser flexbox pour faciliter le défilement horizontal */
				transition: transform 0.5s ease; /* Effet de défilement */
			}

			.menu-item {
				flex: 0 0 33.33%; /* Afficher 3 éléments à la fois */
				box-sizing: border-box; /* Pour éviter le débordement */
				padding: 10px;
			}

			.price {
				text-align: center;
				font-size: 30px;
				color: #f8f9fa;
			}
              .menu-item .mm {
        
            animation: zoomAndStraighten 5s ease-in-out infinite;
        }
              .menu-ite .mm {
        
            animation: zoomAndStraighten 7s ease-in-out infinite;
        }

        /* Animation de zoom et de redressement */
        @keyframes zoomAndStraighten {
            0% {
                transform: scale(1) rotate(0deg); /* Début (taille normale et pas de rotation) */
            }
            30% {
                transform: scale(1.2) rotate(5deg); /* Zoom avant avec rotation */
            }
            60% {
                transform: scale(1) rotate(0deg); /* Redressement et retour à la taille normale */
            }
            80% {
                transform: scale(1.05) rotate(-5deg); /* Petite oscillation avant de finir */
            }
            100% {
                transform: scale(1) rotate(0deg); /* Fin de l'animation, image redressée */
            }
        }
		</style>
	</head>
	<body>

		<div
			class="container">
			<!-- Section gauche : carrousel d'images -->
			<div class="left-section">
				<img class="logo" style="position:absolute; top:-7%; width: 85%;" src="{{ asset('images/logo.png') }}">
				<div class="sparkle-effect">
					<div class="sparkle"></div>
					<div class="sparkle"></div>
					<div class="sparkle"></div>
					<div class="sparkle"></div>
					<div class="sparkle"></div>
					<div class="sparkle"></div>
					<div class="sparkle"></div>
					<div class="sparkle"></div>
					<div class="sparkle"></div>
					<div class="sparkle"></div>
				</div>

				<div class="carousel-container">
					<div class="carousel-track">
						{% for boisson in boissons %}
						<div class="carousel-slide">

							<h2>{{ boisson.libelle }}</h2>

							<img src="{{ asset('images/'~ boisson.image) }}" alt="Plat 1">
							<div class="info-container" >
								<p class="prix">{{ boisson.prix }} KMF</p>

							</div>
						</div>
							{% for tendances in tendance %}
						<div class="carousel-slide">

							<h2>{{ tendances.libelle }}</h2>

							<img src="{{ asset('images/'~ tendances.image) }}" alt="Plat 1">
							<div class="info-container" >
								<p class="prix">{{ tendances.prix }} KMF</p>

							</div>
						</div>
						{% endfor %}
									{% for tendances in sandwichs %}
						<div class="carousel-slide">

							<h2>{{ tendances.libelle }}</h2>

							<img src="{{ asset('images/'~ tendances.image) }}" alt="Plat 1">
							<div class="info-container" >
								<p class="prix">{{ tendances.prix }} KMF</p>

							</div>
						</div>
						{% endfor %}
						{% endfor %}
					</div>
					
				</div>


			</div>

			<!-- Section droite : grille d'images avec description et prix -->
			<div class="right-section">

				<div class="navig" style=" height: 10%; position: absolute; width: 75%;">
					<h1 style="color: #ea551d; text-align: center;  letter-spacing: 2px; font-size: 50px;">Bienvenue 😊!!</h1>
                    
				</div>

				<div class="partage">
					<div class="menu-slider">
						<div class="menu-items">
					{% for sandwich in sandwichs %}
						{% if  sandwich.idcategorie ? sandwich.idcategorie.libelle =="menu sandwich"  %}


							<div class="menu-item" style="float: left;">
								<img class="mm" src="{{ asset('images/'~ sandwich.image) }}" alt="Miniature 2">

								<div class="description">
									<p>
										{{sandwich.libelle }}
									</p>
								</div>

								<div class="descriptions">
									<p> {{sandwich.description }}</p>
								</div>
								<div class="price">
									<p style=" color: #f8f9fa; font-size: 30px; width: 50%; text-align:center; ">
										{{sandwich.prix }} KMF
									</p>
								</div>
								<img  style="width: 50%; height:15%; margin-top:-20px" src="{{ asset('images/etik.png') }}" width="20" height=" 10" alt="">

							</div>
							{% endif %}
							{% endfor %}
							{#  les boissons  #}
							{% for boisson in boissons %}
								
							<div class="menu-item" style="float: left;">
								<img class="mm" src="{{ asset('images/'~ boisson.image) }}" alt="Miniature 4" style="height: 52%; width:70%">

								<div class="description">
									<p>
										{{boisson.libelle}}
									</p>
								</div>


								<div class="price">
									<p style=" color: #f8f9fa; font-size: 30px; width: 50%; text-align:center; ">
										{{boisson.prix}} KMF
									</p>
								</div>
								<img style="width: 50%; height:15%; margin-top:-20px" src="{{ asset('images/etik.png') }}" width="20" height=" 10" alt="">

							</div>
							{% endfor %}
							


						</div>
					</div>









					{# slide 2 #}
					<div class="menu-sliders">
						<div class="menu-x">
				{% for sandwich in sandwichs %}
						{% if  sandwich.idcategorie ? sandwich.idcategorie.libelle =="menu hamburger"  %}
							<div class="menu-ite" style="float: left;">
								<img class="mm" src="{{ asset('images/'~ sandwich.image ) }}" alt="Miniature 2">
								<div class="piece"></div>
								<div class="description">
									<p>
										{{sandwich.libelle }}
									</p>
								</div>

								<div class="descriptions">
									<p> {{sandwich.description }}</p>
								</div>
								<div class="price">
									<p style=" color: #f8f9fa; font-size: 30px; width: 50%; text-align:center; ">
										{{sandwich.prix }} KMF
									</p>
								</div>
								<img style="width: 50%; height:15%; margin-top:-20px" src="{{ asset('images/etik.png') }}" width="20" height=" 10" alt="">

							</div>
						{% endif %}
						{% endfor %}
							{#  les boissons  #}
						{% for boissons in boisson %}
							
							<div class="menu-ite" style="float: left;">
								<img class="mm" src="{{ asset('images/'~ boissons.image ) }}" alt="Miniature 4" style="height: 52%; width:70%">

								<div class="description">
									<p>
										{{boissons.libelle}}
									</p>
								</div>


								<div class="price">
									<p style=" color: #f8f9fa; font-size: 30px; width: 50%; text-align:center; ">
										{{boissons.prix}} KMF
									</p>
								</div>
								<img style="width: 50%; height:15%; margin-top:-20px" src="{{ asset('images/etik.png') }}" width="20" height=" 10" alt="">

							</div>
						{% endfor %}
							

						</div>
					</div>

				</div>


			</div>
		</body>
	</body>
</html>
<script>
	const track = document.querySelector('.carousel-track');
const slides = Array.from(track.children);

let currentSlide = 0;
const totalSlides = slides.length;
const slideInterval = 3000;
// Intervalle de 5 secondes

// Fonction pour passer à la slide suivante
function moveToSlide(slideIndex) { // Calcul de la position de la nouvelle slide
const slideWidth = slides[0].getBoundingClientRect().width;
const moveAmount = -(slideIndex * slideWidth);

// Appliquer la transformation pour faire défiler les slides
track.style.transform = `translateX(${moveAmount}px)`;

currentSlide = slideIndex;
}

// Démarrage de l'intervalle automatique
setInterval(() => {
if (currentSlide < totalSlides - 1) {
moveToSlide(currentSlide + 1);
} else {
moveToSlide(0); // Revenir à la première slide
}
}, slideInterval);

let currentIndex = 0;
const itemsToShow = 3; // Afficher 3 éléments à la fois
const menuItems = document.querySelectorAll('.menu-item');
const totalItems = menuItems.length;
const menuContainer = document.querySelector('.menu-items');

// Fonction pour mettre à jour le défilement
const updateSlide = () => {
const offset = -(currentIndex * (100 / itemsToShow)) + '%';
menuContainer.style.transform = `translateX(${offset})`;
};

// Fonction pour faire défiler les éléments automatiquement
const autoSlide = () => {
currentIndex++;
if (currentIndex >= totalItems - itemsToShow) {
currentIndex = 0; // Revenir au début
}updateSlide();
};

// Démarrer le défilement automatique toutes les 3 secondes
setInterval(autoSlide, 6000); // Défilement toutes les 3 secondes

let currentIndexs = 0;
const itemsToShows = 3; // Afficher 3 éléments à la fois
const menuItem = document.querySelectorAll('.menu-ite');
const totalItem = menuItem.length;
const menuContainers = document.querySelector('.menu-x');

// Fonction pour mettre à jour le défilement
const upslide = () => {
const offset = -(currentIndexs * (100 / itemsToShows)) + '%';
menuContainers.style.transform = `translateX(${offset})`;
};

// Fonction pour faire défiler les éléments automatiquement
const auSlide = () => {
currentIndexs++;
if (currentIndexs >= totalItem - itemsToShows) {
currentIndexs = 0; // Revenir au début
}upslide(); // Appel de la fonction upslide correcte
};

// Démarrer le défilement automatique toutes les 3 secondes
setInterval(auSlide, 6000); // Défilement toutes les 3 secondes


document.addEventListener('DOMContentLoaded', function () {
const menuItems = document.querySelector('.menu-items'); // Le conteneur contenant tous les éléments du menu
const totalItems = document.querySelectorAll('.menu-item').length; // Nombre total d'éléments
const itemsToShow = 3; // Le nombre d'éléments à afficher à la fois
const itemsPerSlide = 3; // Le nombre d'éléments à faire défiler à la fois
let currentIndex = 0;
// Suivre l'index actuel du premier élément du slide

// Obtenez la largeur d'un élément du menu
const itemWidth = document.querySelector('.menu-item').offsetWidth;
menuContainer.style.transition = 'transform 2.5s ease-in-out';


// Fonction pour faire défiler les éléments de 3 en 3
function slide() { // Si l'index actuel est inférieur au nombre total d'éléments moins le nombre d'éléments à afficher
if (currentIndex + itemsPerSlide < totalItems) {
currentIndex += itemsPerSlide;
} else {
currentIndex = 0; // Revenir au début
}
// Déplacez le conteneur vers la gauche en fonction du nombre d'éléments à afficher
menuItems.style.transform = `translateX(-${
itemWidth * currentIndex
}px)`;
}

// Définir un intervalle pour faire défiler automatiquement les éléments toutes les 3 secondes (3000 millisecondes)
setInterval(slide, 6000); // Vous pouvez ajuster ce temps d'intervalle si nécessaire
});

document.addEventListener('DOMContentLoaded', function () {
const menuContainer = document.querySelector('.menu-x'); // Conteneur contenant tous les éléments du menu
const totalMenuItems = document.querySelectorAll('.menu-ite').length; // Nombre total d'éléments de menu
const visibleMenuItems = 3; // Nombre d'éléments à afficher simultanément
const slideMenuItems = 3; // Nombre d'éléments à faire défiler à chaque fois
let currentMenuIndex = 0;
// Index actuel du premier élément visible

// Obtenez la largeur d'un élément du menu
const menuItemWidth = document.querySelector('.menu-ite').offsetWidth;
menuContainer.style.transition = 'transform 2.5s ease-in-out';

// Fonction pour faire défiler les éléments de 3 en 3
function slideMenu() { // Si l'index actuel est inférieur au nombre total d'éléments moins le nombre d'éléments visibles
if (currentMenuIndex + slideMenuItems < totalMenuItems) {
currentMenuIndex += slideMenuItems;
} else {
currentMenuIndex = 0; // Revenir au début
}
// Déplace le conteneur vers la gauche en fonction du nombre d'éléments visibles
menuContainer.style.transform = `translateX(-${
menuItemWidth * currentMenuIndex
}px)`;
}

// Définir un intervalle pour faire défiler automatiquement les éléments toutes les 3 secondes (3000 millisecondes)
setInterval(slideMenu, 6000); // Ajuste l'intervalle de temps si nécessaire
});
</script>

